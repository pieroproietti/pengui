# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'produceRBviwe.ui'
##
## Created by: Qt User Interface Compiler version 6.6.1
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide6.QtCore import (QCoreApplication, QDate, QDateTime, QLocale,
    QMetaObject, QObject, QPoint, QRect,
    QSize, QTime, QUrl, Qt)
from PySide6.QtGui import (QBrush, QColor, QConicalGradient, QCursor,
    QFont, QFontDatabase, QGradient, QIcon,
    QImage, QKeySequence, QLinearGradient, QPainter,
    QPalette, QPixmap, QRadialGradient, QTransform)
from PySide6.QtWidgets import (QAbstractButton, QApplication, QCheckBox, QComboBox,
    QDialog, QDialogButtonBox, QGridLayout, QHBoxLayout,
    QLabel, QLineEdit, QPushButton, QSizePolicy,
    QWidget)
import resources_rc

class Ui_DialogProduce(object):
    def setupUi(self, DialogProduce):
        if not DialogProduce.objectName():
            DialogProduce.setObjectName(u"DialogProduce")
        DialogProduce.resize(640, 480)
        DialogProduce.setMinimumSize(QSize(640, 480))
        icon = QIcon()
        icon.addFile(u":/pengui/icons/pengui.svg", QSize(), QIcon.Normal, QIcon.Off)
        DialogProduce.setWindowIcon(icon)
        DialogProduce.setLocale(QLocale(QLocale.English, QLocale.UnitedStates))
        self.buttonBox = QDialogButtonBox(DialogProduce)
        self.buttonBox.setObjectName(u"buttonBox")
        self.buttonBox.setGeometry(QRect(10, 440, 621, 32))
        self.buttonBox.setOrientation(Qt.Horizontal)
        self.buttonBox.setStandardButtons(QDialogButtonBox.Cancel|QDialogButtonBox.Ok)
        self.lineEditCommand = QLineEdit(DialogProduce)
        self.lineEditCommand.setObjectName(u"lineEditCommand")
        self.lineEditCommand.setGeometry(QRect(20, 320, 611, 21))
        self.pushButtonRun = QPushButton(DialogProduce)
        self.pushButtonRun.setObjectName(u"pushButtonRun")
        self.pushButtonRun.setGeometry(QRect(300, 360, 151, 101))
        self.pushButtonGenerate = QPushButton(DialogProduce)
        self.pushButtonGenerate.setObjectName(u"pushButtonGenerate")
        self.pushButtonGenerate.setGeometry(QRect(160, 360, 131, 101))
        self.pushButtonHelp = QPushButton(DialogProduce)
        self.pushButtonHelp.setObjectName(u"pushButtonHelp")
        self.pushButtonHelp.setGeometry(QRect(10, 360, 141, 101))
        self.labelTheme = QLabel(DialogProduce)
        self.labelTheme.setObjectName(u"labelTheme")
        self.labelTheme.setGeometry(QRect(21, 206, 73, 25))
        self.labelFilters = QLabel(DialogProduce)
        self.labelFilters.setObjectName(u"labelFilters")
        self.labelFilters.setGeometry(QRect(21, 128, 63, 25))
        self.lineEditPrefix = QLineEdit(DialogProduce)
        self.lineEditPrefix.setObjectName(u"lineEditPrefix")
        self.lineEditPrefix.setGeometry(QRect(164, 50, 451, 33))
        self.comboBoxAddons = QComboBox(DialogProduce)
        self.comboBoxAddons.setObjectName(u"comboBoxAddons")
        self.comboBoxAddons.setGeometry(QRect(164, 11, 461, 33))
        self.labelCompression = QLabel(DialogProduce)
        self.labelCompression.setObjectName(u"labelCompression")
        self.labelCompression.setGeometry(QRect(21, 167, 137, 25))
        self.comboBoxCompression = QComboBox(DialogProduce)
        self.comboBoxCompression.setObjectName(u"comboBoxCompression")
        self.comboBoxCompression.setGeometry(QRect(164, 167, 461, 33))
        self.layoutWidget = QWidget(DialogProduce)
        self.layoutWidget.setObjectName(u"layoutWidget")
        self.layoutWidget.setGeometry(QRect(0, 0, 271, 33))
        self.gridLayout = QGridLayout(self.layoutWidget)
        self.gridLayout.setObjectName(u"gridLayout")
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.checkBoxBasename = QCheckBox(DialogProduce)
        self.checkBoxBasename.setObjectName(u"checkBoxBasename")
        self.checkBoxBasename.setGeometry(QRect(21, 89, 136, 31))
        self.checkBoxPrefix = QCheckBox(DialogProduce)
        self.checkBoxPrefix.setObjectName(u"checkBoxPrefix")
        self.checkBoxPrefix.setGeometry(QRect(21, 50, 84, 31))
        self.comboBoxTheme = QComboBox(DialogProduce)
        self.comboBoxTheme.setObjectName(u"comboBoxTheme")
        self.comboBoxTheme.setGeometry(QRect(164, 206, 461, 33))
        self.lineEditBasename = QLineEdit(DialogProduce)
        self.lineEditBasename.setObjectName(u"lineEditBasename")
        self.lineEditBasename.setGeometry(QRect(164, 89, 210, 33))
        self.labelAddons = QLabel(DialogProduce)
        self.labelAddons.setObjectName(u"labelAddons")
        self.labelAddons.setGeometry(QRect(20, 10, 269, 31))
        self.layoutWidget1 = QWidget(DialogProduce)
        self.layoutWidget1.setObjectName(u"layoutWidget1")
        self.layoutWidget1.setGeometry(QRect(160, 120, 271, 33))
        self.gridLayout_2 = QGridLayout(self.layoutWidget1)
        self.gridLayout_2.setObjectName(u"gridLayout_2")
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.checkBoxCustom = QCheckBox(self.layoutWidget1)
        self.checkBoxCustom.setObjectName(u"checkBoxCustom")

        self.gridLayout_2.addWidget(self.checkBoxCustom, 0, 0, 1, 1)

        self.checkBoxHomes = QCheckBox(self.layoutWidget1)
        self.checkBoxHomes.setObjectName(u"checkBoxHomes")

        self.gridLayout_2.addWidget(self.checkBoxHomes, 0, 1, 1, 1)

        self.checkBoxUsr = QCheckBox(self.layoutWidget1)
        self.checkBoxUsr.setObjectName(u"checkBoxUsr")

        self.gridLayout_2.addWidget(self.checkBoxUsr, 0, 2, 1, 1)

        self.layoutWidget2 = QWidget(DialogProduce)
        self.layoutWidget2.setObjectName(u"layoutWidget2")
        self.layoutWidget2.setGeometry(QRect(0, 260, 563, 33))
        self.horizontalLayout = QHBoxLayout(self.layoutWidget2)
        self.horizontalLayout.setObjectName(u"horizontalLayout")
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.checkBoxScript = QCheckBox(self.layoutWidget2)
        self.checkBoxScript.setObjectName(u"checkBoxScript")

        self.horizontalLayout.addWidget(self.checkBoxScript)

        self.checkBoxClone = QCheckBox(self.layoutWidget2)
        self.checkBoxClone.setObjectName(u"checkBoxClone")

        self.horizontalLayout.addWidget(self.checkBoxClone)

        self.checkBoxUnsecure = QCheckBox(self.layoutWidget2)
        self.checkBoxUnsecure.setObjectName(u"checkBoxUnsecure")
        self.checkBoxUnsecure.setTristate(False)

        self.horizontalLayout.addWidget(self.checkBoxUnsecure)

        self.checkBoxCryptedClone = QCheckBox(self.layoutWidget2)
        self.checkBoxCryptedClone.setObjectName(u"checkBoxCryptedClone")

        self.horizontalLayout.addWidget(self.checkBoxCryptedClone)

        self.checkBoxYolk = QCheckBox(self.layoutWidget2)
        self.checkBoxYolk.setObjectName(u"checkBoxYolk")

        self.horizontalLayout.addWidget(self.checkBoxYolk)


        self.retranslateUi(DialogProduce)
        self.buttonBox.accepted.connect(DialogProduce.accept)
        self.buttonBox.rejected.connect(DialogProduce.reject)

        QMetaObject.connectSlotsByName(DialogProduce)
    # setupUi

    def retranslateUi(self, DialogProduce):
        DialogProduce.setWindowTitle(QCoreApplication.translate("DialogProduce", u"Dialog", None))
#if QT_CONFIG(tooltip)
        self.lineEditCommand.setToolTip(QCoreApplication.translate("DialogProduce", u"generated command to produce ISO", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.pushButtonRun.setToolTip(QCoreApplication.translate("DialogProduce", u"run or copy ib ckuobiard the generated command", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonRun.setText(QCoreApplication.translate("DialogProduce", u"&Run", None))
#if QT_CONFIG(tooltip)
        self.pushButtonGenerate.setToolTip(QCoreApplication.translate("DialogProduce", u"generate the command", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonGenerate.setText(QCoreApplication.translate("DialogProduce", u"&Generate", None))
#if QT_CONFIG(tooltip)
        self.pushButtonHelp.setToolTip(QCoreApplication.translate("DialogProduce", u"run or copy ib ckuobiard the generated command", None))
#endif // QT_CONFIG(tooltip)
        self.pushButtonHelp.setText(QCoreApplication.translate("DialogProduce", u"&Help", None))
#if QT_CONFIG(tooltip)
        self.labelTheme.setToolTip(QCoreApplication.translate("DialogProduce", u"Select the desired theme. To download themes: eggs wardrobe get", None))
#endif // QT_CONFIG(tooltip)
        self.labelTheme.setText(QCoreApplication.translate("DialogProduce", u"Theme", None))
#if QT_CONFIG(tooltip)
        self.labelFilters.setToolTip(QCoreApplication.translate("DialogProduce", u"Filters are used to remove private or unnecessaries informations from the image, note exclude.list.template is always applied", None))
#endif // QT_CONFIG(tooltip)
        self.labelFilters.setText(QCoreApplication.translate("DialogProduce", u"Filters", None))
#if QT_CONFIG(tooltip)
        self.lineEditPrefix.setToolTip(QCoreApplication.translate("DialogProduce", u"prefix", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.comboBoxAddons.setToolTip(QCoreApplication.translate("DialogProduce", u"Select addons to insert", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.labelCompression.setToolTip(QCoreApplication.translate("DialogProduce", u"You can choose from three types of compression: fast (default), standart and max", None))
#endif // QT_CONFIG(tooltip)
        self.labelCompression.setText(QCoreApplication.translate("DialogProduce", u"Compression", None))
#if QT_CONFIG(tooltip)
        self.comboBoxCompression.setToolTip(QCoreApplication.translate("DialogProduce", u"Select compression", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.checkBoxBasename.setToolTip(QCoreApplication.translate("DialogProduce", u"Basename (usually hostname)", None))
#endif // QT_CONFIG(tooltip)
        self.checkBoxBasename.setText(QCoreApplication.translate("DialogProduce", u"Basename", None))
#if QT_CONFIG(tooltip)
        self.checkBoxPrefix.setToolTip(QCoreApplication.translate("DialogProduce", u"Prefix eg: egg-of_DISTRONAME-CODENAME-", None))
#endif // QT_CONFIG(tooltip)
        self.checkBoxPrefix.setText(QCoreApplication.translate("DialogProduce", u"Prefix", None))
#if QT_CONFIG(tooltip)
        self.comboBoxTheme.setToolTip(QCoreApplication.translate("DialogProduce", u"Select theme", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.lineEditBasename.setToolTip(QCoreApplication.translate("DialogProduce", u"basename", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.labelAddons.setToolTip(QCoreApplication.translate("DialogProduce", u"configures the addon and creates a link to the selected one on the desktop", None))
#endif // QT_CONFIG(tooltip)
        self.labelAddons.setText(QCoreApplication.translate("DialogProduce", u"Addons", None))
#if QT_CONFIG(tooltip)
        self.checkBoxCustom.setToolTip(QCoreApplication.translate("DialogProduce", u"Add exclude.list.custom to the /etc/penguins-eggs.d/exclude.list", None))
#endif // QT_CONFIG(tooltip)
        self.checkBoxCustom.setText(QCoreApplication.translate("DialogProduce", u"custom", None))
#if QT_CONFIG(tooltip)
        self.checkBoxHomes.setToolTip(QCoreApplication.translate("DialogProduce", u"Add exclude.list.homes to the /etc/penguins-eggs.d/exclude.list", None))
#endif // QT_CONFIG(tooltip)
        self.checkBoxHomes.setText(QCoreApplication.translate("DialogProduce", u"homes", None))
#if QT_CONFIG(tooltip)
        self.checkBoxUsr.setToolTip(QCoreApplication.translate("DialogProduce", u"Add exclude.list.usr to the /etc/penguins-eggs.d/exclude.list", None))
#endif // QT_CONFIG(tooltip)
        self.checkBoxUsr.setText(QCoreApplication.translate("DialogProduce", u"usr", None))
#if QT_CONFIG(tooltip)
        self.checkBoxScript.setToolTip(QCoreApplication.translate("DialogProduce", u"It only creates the scripts necessary to create the ISO, but does not create it.", None))
#endif // QT_CONFIG(tooltip)
        self.checkBoxScript.setText(QCoreApplication.translate("DialogProduce", u"Script", None))
#if QT_CONFIG(tooltip)
        self.checkBoxClone.setToolTip(QCoreApplication.translate("DialogProduce", u"Performs a complete clone of the system by also copying users and their data", None))
#endif // QT_CONFIG(tooltip)
        self.checkBoxClone.setText(QCoreApplication.translate("DialogProduce", u"Clone", None))
#if QT_CONFIG(tooltip)
        self.checkBoxUnsecure.setToolTip(QCoreApplication.translate("DialogProduce", u"Selecting unsecure will also copy the data in /root to the ISO", None))
#endif // QT_CONFIG(tooltip)
        self.checkBoxUnsecure.setText(QCoreApplication.translate("DialogProduce", u"Unsecure", None))
#if QT_CONFIG(tooltip)
        self.checkBoxCryptedClone.setToolTip(QCoreApplication.translate("DialogProduce", u"Performs a complete clone of the system by also copying the users and their data that will be encrypted in a LUKS volume inside the ISO ", None))
#endif // QT_CONFIG(tooltip)
        self.checkBoxCryptedClone.setText(QCoreApplication.translate("DialogProduce", u"Crypted Clone", None))
#if QT_CONFIG(tooltip)
        self.checkBoxYolk.setToolTip(QCoreApplication.translate("DialogProduce", u"Generates or regenerates a local repository /var/local/yolk to allow installation even in the absence of the Internet.", None))
#endif // QT_CONFIG(tooltip)
        self.checkBoxYolk.setText(QCoreApplication.translate("DialogProduce", u"Yolk", None))
    # retranslateUi

